{"version":3,"sources":["StateProvider.js","Header.js","axios.js","SidebarOption.js","Sidebar.js","Message.js","ChatInput.js","Chat.js","firebase.js","reducer.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Header","user","className","Avatar","src","photoURL","alt","displayName","placeholder","instance","axios","create","baseURL","SidebarOption","Icon","id","addChannelOption","title","history","useHistory","onClick","channelName","prompt","post","push","pusher","Pusher","cluster","Sidebar","useState","channels","setChannels","console","log","getChannelList","get","then","res","data","useEffect","subscribe","bind","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","map","channel","key","name","Message","message","timestamp","userImg","Date","parseInt","toUTCString","ChatInput","channelId","input","setInput","onChange","e","target","toLowerCase","type","preventDefault","now","userImage","Chat","roomId","useParams","roomDetails","setRoomDetails","roomMessages","setRoomMessages","getConvo","conversation","StarBorderOutlined","InfoOutlined","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","GoogleAuthProvider","actionTypes","state","action","Login","dispatch","Button","signInWithPopup","result","catch","error","alert","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e6f1b5d.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","import React from 'react'\nimport './Header.css'\nimport { Avatar } from '@material-ui/core'\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport SearchIcon from '@material-ui/icons/Search';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport { useStateValue } from './StateProvider';\n\nconst Header = () => {\n    const [{user}]=useStateValue()\n\n    return (\n        <div className='header' >\n            <div className=\"header__left\">\n                <Avatar className=\"header__avatar\" src={user?.photoURL} alt={user?.displayName} />\n                <AccessTimeIcon />\n            </div>\n\n            <div className=\"header__search\">\n                <SearchIcon />\n                <input placeholder=\"Search me\" />\n            </div>\n\n            <div className=\"header__right\">\n                <HelpOutlineIcon />\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://slack-mern-clone-backend.herokuapp.com\"\r\n})\r\n\r\nexport default instance;","import React from 'react'\nimport './SidebarOption.css'\nimport { useHistory } from \"react-router-dom\";\nimport axios from './axios';\n\n\nconst SidebarOption = ({ Icon, id, addChannelOption, title }) => {\n    const history = useHistory();\n\n    const selectChannel = () => {\n        if (id) {\n            history.push(`/room/${id}`)\n        } else {\n            history.push(title);\n        }\n    };\n\n    const addChannel = () => {\n        const channelName = prompt(\"Please enter the channel name\");\n\n        if (channelName) {\n           axios.post('/new/channel', {\n               channelName: channelName\n           })\n        }\n    };\n    \n    return (\n        <div className=\"sidebarOption\" onClick={addChannelOption ? addChannel : selectChannel}>\n            {Icon && <Icon className='sidebarOption__icon' />}\n            {Icon ? (\n                <h3>{title}</h3>\n            ) : (\n                    <h3 className=\"sidebarOption__channel\">\n                        <span className=\"sidebarOption__hash\"> # </span> {title}\n                    </h3>\n                )}\n        </div>\n    )\n}\n\nexport default SidebarOption\n","import React, { useEffect, useState } from 'react'\nimport './Sidebar.css'\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport CreateIcon from '@material-ui/icons/Create';\nimport SidebarOption from \"./SidebarOption\"\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport DraftsIcon from '@material-ui/icons/Drafts';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport axios from './axios';\nimport { useStateValue } from './StateProvider';\nimport Pusher from 'pusher-js';\n\nconst pusher = new Pusher('055f80773b8421ad23b2', {\n    cluster: 'us2'\n});\n\nconst Sidebar = () => {\n    const [channels, setChannels] = useState([]);\n    const [{ user}, dispatch] = useStateValue();\n    console.log(\"User:---------sidebar*********\",user);\n\n    const getChannelList = () => {\n        axios.get('/get/channelList').then((res) => {\n            console.log(\"channelist----\", res.data)\n            setChannels(res.data)\n        })\n    }\n\n    useEffect(() => {\n        getChannelList()\n        const channel = pusher.subscribe('channels');\n            channel.bind('newChannel', function(data) {\n                getChannelList()\n            });\n    }, [])\n\n    return (\n        <div className='sidebar' >\n            <div className=\"sidebar__header\">\n                <div className=\"sidebar__info\">\n                    <h2>Company Name</h2>\n                    <h3>\n                        <FiberManualRecordIcon />\n                        {user.displayName}\n                    </h3>\n                </div>\n                <CreateIcon />\n            </div>\n            <SidebarOption Icon={InsertCommentIcon} title=\"Threads\" />\n            <SidebarOption Icon={InboxIcon} title=\"Mentions & reactions\" />\n            <SidebarOption Icon={DraftsIcon} title=\"Saved items\" />\n            <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel browser\" />\n            <SidebarOption Icon={PeopleAltIcon} title=\"People & user groups\" />\n            <SidebarOption Icon={AppsIcon} title=\"Apps\" />\n            <SidebarOption Icon={FileCopyIcon} title=\"File browser\" />\n            <SidebarOption Icon={ExpandLessIcon} title=\"Show less\" />\n            <SidebarOption title='YouTube' />\n            <hr />\n            <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\" />\n            <hr />\n            <SidebarOption Icon={AddIcon} addChannelOption title=\"Add Channel\" />\n\n            {\n                channels.map(channel => (\n                    <SidebarOption key={channel.id} title={channel.name} id={channel.id} />\n                )\n                )\n            }\n\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React from 'react'\nimport \"./Message.css\";\nimport { useStateValue } from './StateProvider';\n\nfunction Message({ message, timestamp, user, userImg }) {\n    //const [{ user }] = useStateValue();\n    return (\n        <div className=\"message\">\n            <img src={userImg} alt=\"ProfilePic\" />\n            <div className=\"message__info\">\n                <h4>\n                    {user}{\" \"}\n                    <span className=\"message__timestamp\">\n                        {new Date(parseInt(timestamp)).toUTCString()}\n                    </span>\n                </h4>\n                <p>{message}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React, { useState } from 'react';\nimport \"./ChatInput.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport axios from './axios';\n\n\nfunction ChatInput({ channelName, channelId }) {\n    const [input, setInput] = useState(\"\");\n    const [{ user }] = useStateValue();\n\n    const sendMessage = (e) => {\n        e.preventDefault();\n\n        if (channelId) {\n            axios.post(`/new/message?id=${channelId}`, {\n                message: input,\n                timestamp:Date.now(),\n                user: user.displayName,\n                userImage: user.photoURL\n            })\n        }\n        setInput(\"\");\n    };\n    return (\n        <div className=\"chatInput\">\n            <form>\n                <input\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    placeholder={`Message #${channelName?.toLowerCase()}`}\n                />\n                <button type=\"sumbit\" onClick={sendMessage}></button>\n            </form>\n        </div>\n    )\n}\n\nexport default ChatInput\n","import React, { useState, useEffect } from 'react'\nimport \"./Chat.css\"\nimport { useParams } from \"react-router-dom\"\nimport { InfoOutlined, StarBorderOutlined } from '@material-ui/icons';\nimport Message from './Message'\nimport ChatInput from './ChatInput';\nimport axios from './axios';\nimport Pusher from 'pusher-js';\nimport { useStateValue } from './StateProvider';\n\n\nconst pusher = new Pusher('055f80773b8421ad23b2', {\n    cluster: 'us2'\n});\n\nconst Chat = () => {\n    const { roomId } = useParams();\n    const [roomDetails, setRoomDetails] = useState(null);\n    const [roomMessages, setRoomMessages] = useState([]);\n    //const [{user}, dispatch] = useStateValue();\n    console.log(\"Roooooooooooooomesages\", roomMessages);\n    const getConvo = () => {\n        axios.get(`/get/conversation?id=${roomId}`).then((res) => {\n            setRoomDetails(res.data[0].channelName)\n            setRoomMessages(res.data[0].conversation)\n        })\n    }\n\n    useEffect(() => {\n        if (roomId) {\n            getConvo();\n            //pusher\n            const channel = pusher.subscribe('conversation');\n            channel.bind('newMessage', function(data) {\n                getConvo()\n            });\n        }\n    }, [roomId])\n\n    return (\n        <div className=\"chat\">\n            <div className=\"chat__header\">\n                <div className=\"chat__headerLeft\">\n                    <h4 className=\"chat__channelName\">\n                        <strong> #{roomDetails} </strong>\n                        {/* <strong>#general</strong> */}\n                        <StarBorderOutlined />\n                    </h4>\n                </div>\n\n                <div className=\"chat__headerRight\">\n                    <p><InfoOutlined /> Details</p>\n\n                </div>\n            </div>\n\n            <div className=\"chat__messages\">\n                {roomMessages.map(({ message, timestamp, user, userImage}) => (\n                    <Message\n                        message={message}\n                        timestamp={timestamp}\n                        user={user}\n                        userImg = {userImage}\n                    />\n                ))}\n            </div>\n            <ChatInput channelName={roomDetails} channelId={roomId} />\n        </div>\n    )\n}\n\nexport default Chat\n","import firebase from 'firebase'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBi_8LW6LJ0ad0POxFRAZ9k2lqS0jvBNrY\",\n  authDomain: \"slack-mern-clone-c7b2d.firebaseapp.com\",\n  databaseURL: \"https://slack-mern-clone-c7b2d.firebaseio.com\",\n  projectId: \"slack-mern-clone-c7b2d\",\n  storageBucket: \"slack-mern-clone-c7b2d.appspot.com\",\n  messagingSenderId: \"499975271508\",\n  appId: \"1:499975271508:web:cbd252ef8802f87f5ea9c1\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\n\n//const db = firebaseApp.firestore()\nconst auth = firebase.auth()\nconst provider = new firebase.auth.GoogleAuthProvider()\n\nexport { auth, provider }\n//export default db","export const initialState = {\n    user: null\n  };\n  \n  export const actionTypes = {\n    SET_USER: \"SET_USER\",\n  };\n  \n  const reducer = (state, action) => {\n    console.log(action);\n  \n    switch (action.type) {\n      case actionTypes.SET_USER:\n        return {\n          ...state,\n          user: action.user\n        }\n      default:\n        return state\n    }\n  };\n  \n  export default reducer;\n  ","import React from 'react'\nimport \"./Login.css\";\nimport { Button } from \"@material-ui/core\";\nimport { auth, provider } from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport { actionTypes } from \"./reducer\";\n\nconst Login = () => {\n    const [state, dispatch] = useStateValue();\n\n    const signIn = () => {\n        auth.signInWithPopup(provider)\n            .then((result) => {\n                console.log(\"result-----------\", result)\n                dispatch({\n                    type: actionTypes.SET_USER,\n                    user: result.user,\n                });\n            })\n            .catch((error) => {\n                alert(error.message);\n            });\n    };\n\n    return (\n        <div className=\"login\" >\n            <div className=\"login__container\">\n                <img\n                    src=\"https://a.slack-edge.com/80588/marketing/img/icons/icon_slack_hash_colored.png\"\n                    alt=\"\"\n                />\n\n                <h1>Sign in to Your Company</h1>\n                <p>yourcompany.slack.com</p>\n                <Button onClick={signIn}>Sign in with Google</Button>\n            </div>\n        </div >\n    )\n}\n\nexport default Login\n","import React, { useState } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Sidebar from './Sidebar';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Chat from './Chat'\nimport Login from './Login';\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <Login />\n        ) : (\n            <>\n              <Header />\n              <div className=\"app__body\">\n                <Sidebar />\n                <Switch>\n                  <Route path=\"/room/:roomId\">\n                    <Chat />\n                  </Route>\n                  <Route path=\"/\">\n                    <div className=\"homepage\">\n                      <h1>Welcome to Slack</h1>\n                      <h3>Let's set up your team</h3>\n                      <p>Add channels to begin</p>\n                    </div>\n                  </Route>\n                </Switch>\n              </div>\n            </>\n          )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './StateProvider';\nimport reducer, { initialState } from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer} >\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}